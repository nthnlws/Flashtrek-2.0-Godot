[gd_scene load_steps=15 format=3 uid="uid://cwpuu3a1dm776"]

[ext_resource type="Texture2D" uid="uid://bxwfdylr3rd3y" path="res://assets/textures/glowing_circle25.png" id="2_el4j4"]
[ext_resource type="Texture2D" uid="uid://b7lndu3ejpnbu" path="res://assets/textures/glowing_circle20.png" id="3_r8vy2"]
[ext_resource type="Texture2D" uid="uid://b8r2p6xdy6rsg" path="res://assets/textures/circle25.png" id="3_yh6sv"]
[ext_resource type="AudioStream" uid="uid://bdxta7lwtdrew" path="res://assets/audio/weapons/tos_ship_phaser.ogg" id="5_4gfmv"]
[ext_resource type="AudioStream" uid="uid://cbpachnemcxrh" path="res://assets/audio/weapons/laser_fizzle.ogg" id="6_yf2fb"]
[ext_resource type="AudioStream" uid="uid://bsmdrnha1bbpp" path="res://assets/audio/weapons/laser_bass.ogg" id="7_y5fda"]

[sub_resource type="GDScript" id="GDScript_788yo"]
script/source = "extends RayCast2D

var laserClickState:bool= false # Bool to check input hold status
var enemy_collision:bool = false # Bool to check if Raycast is hitting one of desired target areas
var laserStatus:bool = false # Final variable created after switching laser on or off
var cast_point_exact:Vector2 # Coords of exact collision for use in particles

@onready var parent = get_parent()
@onready var ship_particles = $ship_particles
@onready var collision_particles = $collision_particles

var shield_exception # Node to add and remove to exception list
var collision_area # Global variable for HUD and debug

# Damage variables
var accumulated_damage:float = 0
var accumulated_time:float = 0
@export var base_damage:int = 20
var damage:float = 20:
	get:
		return PlayerUpgrades.DamageAdd + (base_damage * PlayerUpgrades.DamageMult)
		

@export var view_distance:int = 1200

@export var base_energy_drain:float = 7.5
var energy_drain: float = 7.5:
	get:
		return PlayerUpgrades.EnergyDrainAdd + (base_energy_drain * PlayerUpgrades.EnergyDrainMult)


func _ready():
	#Adds own player areas to exception list
	add_exception(get_parent().get_node(\"hitbox_area\"))
	add_exception(get_parent().get_node(\"playerShield/shield_area\"))
	
	$Line2D.visible = false
	$Line2D.width = 0
	$Line2D.points[1] = Vector2.ZERO
	target_position = Vector2(0, -view_distance)
	
	
func _physics_process(delta):
	force_raycast_update()
	
	# Laser range override from options menu
	if GameSettings.laserRangeOverride == true:
		target_position = Vector2(0, -GameSettings.laserRange)
	elif GameSettings.laserRangeOverride == false:
		target_position = Vector2(0, -view_distance)

	# Collision logic
	if is_colliding():
		var collider: Object = get_collider()
		collision_area = collider
		
		if collider.is_in_group(\"enemy_shield\"):
			var target_shield: Object = collider
			shield_exception = collider
			if target_shield.get_parent().shieldActive == true:
				cast_point_exact = to_local(get_collision_point())
				$Line2D.points[1] = cast_point_exact
				target_to_shield(collider, delta)
				laserOn()
			elif target_shield.get_parent().shieldActive == false:
				add_exception(target_shield)
		elif collider.is_in_group(\"enemy_hitbox\"):
			cast_point_exact = to_local(get_collision_point())
			$Line2D.points[1] = cast_point_exact
			target_to_hitbox(collider, delta)
			laserOn()
	else:
		enemy_collision = false
		laserOff()
		
	
	#Particles for laser beam path
	$laser_particles.position = cast_point_exact * 0.5
	$laser_particles.process_material.emission_box_extents.y = cast_point_exact.length() * 0.5
	
func _process(delta):
	# Damage setting from Cheat Menu
	if GameSettings.laserDamageOverride == true:
		damage = GameSettings.laserDamage
	
	#Turns on laser if player is right clicking and not warping
	if Input.is_action_just_pressed(\"right_click\"):
		if get_parent().warping_active == false and GameSettings.menuStatus == false:
			laserClickState = true
			ship_particles.emitting = true
			
	#Turns off laser if right click is released or player is warping
	if Input.is_action_just_released(\"right_click\") or get_parent().warping_active == true or get_parent().energy_current <= 0 or GameSettings.menuStatus == true:
		laserClickState = false
		ship_particles.emitting = false
		laserOff()

	if laserStatus == true:
		accumulated_damage += damage * delta
		accumulated_time += delta
		if accumulated_time > 0.5:
			parent.create_damage_indicator(snappedf(accumulated_damage, 0.5), to_global(cast_point_exact), Utility.damage_blue)
			accumulated_damage = 0
			accumulated_time = 0

	#Laser fizzle sound
	if Input.is_action_just_pressed(\"right_click\"):
		if laserClickState == true:
			await get_tree().process_frame
			await get_tree().process_frame
			if enemy_collision == false:
				$laserFizzle.play()
		
		
func target_to_shield(collider, delta):
	enemy_collision = true
	
	#Sets collision particle position and color
	collision_particles.process_material.color = Color(0.5, 1.0, 1.0, 1.0) #Color to blue
	collision_particles.position = cast_point_exact
	collision_particles.global_rotation = get_collision_normal().angle()
	
	if laserStatus == true:
		collider.get_parent().sp_current -= damage*delta
	
func target_to_hitbox(collider, delta):
	enemy_collision = true
	
	##Sets collision particle position and color
	collision_particles.process_material.color = Color(1.0, 1.0, 0.0, 1.0) #Color to yellow
	collision_particles.position = cast_point_exact
	collision_particles.global_rotation = get_collision_normal().angle()


	#Clears exception before next phyics update in case shield regens
	if shield_exception != null:
		remove_exception(shield_exception)
	
	if laserStatus == true:
		var frame_damage: float = damage*delta
		collider.get_parent().hp_current -= frame_damage
	
	
func laserOn():
	if laserClickState == true and enemy_collision == true and laserStatus == false:
		#Turns on collision particles on target contact point
		collision_particles.emitting = true
		
		#Turn on laser beam
		$Line2D.visible = true
		$laser_particles.emitting = true
		var tween: Object = create_tween()
		tween.tween_property($Line2D, \"width\", 5, 0.1)

		$laserSound.play()
		$laserBass.play()
		$laserBass2.play()

		laserStatus = true
	
func laserOff(): 
	if laserStatus == true:
		#Turns off laser beam
		var tween: Object = create_tween()
		tween.tween_property($Line2D, \"width\", 0, 0.1)
		await tween.finished
		$Line2D.visible = false
		$laser_particles.emitting = false
		
		collision_particles.emitting = false
		
		$laserSound.stop()
		$laserBass.stop()
		$laserBass2.stop()
		
		laserStatus = false
	
"

[sub_resource type="Gradient" id="Gradient_k33yi"]
offsets = PackedFloat32Array(0, 0.493151, 1)
colors = PackedColorArray(1, 1, 0, 1, 1, 1, 0.753425, 1, 1, 1, 1, 0)

[sub_resource type="GradientTexture1D" id="GradientTexture1D_dakmh"]
gradient = SubResource("Gradient_k33yi")
width = 1024

[sub_resource type="Curve" id="Curve_4fbcb"]
_data = [Vector2(0, 1), 0.0, 0.0, 0, 0, Vector2(0.609195, 1), 0.0, 0.0, 0, 0, Vector2(0.994253, 0.010989), 0.0, 0.0, 0, 0]
point_count = 3

[sub_resource type="CurveTexture" id="CurveTexture_xjiwp"]
width = 2048
curve = SubResource("Curve_4fbcb")

[sub_resource type="ParticleProcessMaterial" id="ParticleProcessMaterial_irlj2"]
particle_flag_disable_z = true
direction = Vector3(0, -1, 0)
spread = 70.0
initial_velocity_max = 150.0
gravity = Vector3(0, 0, 0)
scale_curve = SubResource("CurveTexture_xjiwp")
color = Color(0.5, 3, 6, 1)
color_ramp = SubResource("GradientTexture1D_dakmh")

[sub_resource type="ParticleProcessMaterial" id="ParticleProcessMaterial_mk58g"]
particle_flag_disable_z = true
emission_shape = 3
emission_box_extents = Vector3(1, 1, 1)
spread = 180.0
initial_velocity_min = 100.0
initial_velocity_max = 100.0
gravity = Vector3(0, 0, 0)

[sub_resource type="ParticleProcessMaterial" id="ParticleProcessMaterial_gwks7"]
particle_flag_disable_z = true
direction = Vector3(0, -1, 0)
spread = 70.0
initial_velocity_max = 150.0
gravity = Vector3(0, 0, 0)
scale_curve = SubResource("CurveTexture_xjiwp")
color = Color(0.5, 3, 6, 1)

[node name="Laser" type="RayCast2D"]
target_position = Vector2(0, 1200)
collision_mask = 194
collide_with_areas = true
collide_with_bodies = false
script = SubResource("GDScript_788yo")
base_damage = 25

[node name="Line2D" type="Line2D" parent="."]
points = PackedVector2Array(0, 0, 0, -300)
width = 5.0
default_color = Color(0.5, 3, 6, 1)

[node name="ship_particles" type="GPUParticles2D" parent="."]
position = Vector2(0, -37)
scale = Vector2(0.5, 0.5)
emitting = false
amount = 4
texture = ExtResource("2_el4j4")
lifetime = 0.7
process_material = SubResource("ParticleProcessMaterial_irlj2")

[node name="laser_particles" type="GPUParticles2D" parent="."]
position = Vector2(0, -37)
scale = Vector2(0.5, 0.5)
emitting = false
amount = 7
texture = ExtResource("3_r8vy2")
lifetime = 0.7
process_material = SubResource("ParticleProcessMaterial_mk58g")

[node name="collision_particles" type="GPUParticles2D" parent="."]
scale = Vector2(0.5, 0.5)
emitting = false
amount = 4
texture = ExtResource("3_yh6sv")
lifetime = 0.7
process_material = SubResource("ParticleProcessMaterial_gwks7")

[node name="laserSound" type="AudioStreamPlayer" parent="."]
stream = ExtResource("5_4gfmv")
volume_db = -10.0

[node name="laserFizzle" type="AudioStreamPlayer" parent="."]
stream = ExtResource("6_yf2fb")
volume_db = -25.0
pitch_scale = 1.6

[node name="laserBass" type="AudioStreamPlayer" parent="."]
stream = ExtResource("7_y5fda")
volume_db = -30.0
pitch_scale = 0.7

[node name="laserBass2" type="AudioStreamPlayer" parent="."]
stream = ExtResource("7_y5fda")
volume_db = -30.0
pitch_scale = 0.6
